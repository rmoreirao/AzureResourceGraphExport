policyresources
| where type == 'microsoft.authorization/policyassignments'
| project AssignmentName = tostring(properties.displayName), policyDefinitionId = tostring(properties.policyDefinitionId), scope = tostring(properties.scope), notScopes = properties.notScopes, createdBy=tostring(properties.metadata.createdBy), createdOn=tostring(properties.metadata.createdOn)
| join kind = leftouter  ( resourcecontainers 
    | project scope = id, ScopeName = name, Scopetype = case(type endswith 'subscriptions', 'Subscription', type endswith 'resourcegroups', 'Resource Group', type endswith 'managementgroups', 'Management Group', 'Root Management Group'))
    on scope
| join kind = leftouter  ( policyresources 
    | where type == 'microsoft.authorization/policydefinitions' or type == 'microsoft.authorization/policysetdefinitions'
    | project policyDefinitionId = id, PolicyName = properties.displayName, kind, PolicyType = properties.policyType ) 
    on policyDefinitionId
| project ['Assignment Name'] = AssignmentName, ['Policy Name'] = PolicyName, Kind = case(kind=='policysetdefinitions', 'Initiative', 'Policy'), ['Policy Type'] = PolicyType, Scope = scope, ['Scope Name'] = iff(isempty(ScopeName), 'Tenant Root Group', ScopeName), ['Scope Type'] = iff(isempty(Scopetype), 'Root Management Group', Scopetype), notScopes, createdBy, createdOn, policyDefinitionId
| order by ['Assignment Name'] asc